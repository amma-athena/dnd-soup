<!doctype html>

<html class="no-js" lang="en">

<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<!-- Page Info -->
	<link rel="shortcut icon" href="/imgs/favicon.png">
	<title>Jason's Pen Test â Darknet Diaries</title>
	<meta name="description" content="Jason Haddix has done hundreds of penetration tests in his career. He comes on the show today to tell us a few stories of things he's done.">
	<meta name="keywords" content="darknet, diaries, podcast, darkweb, dark, web, stories, crypto, hacking, hackers, hackable, breach, virus, malware, botnet, intrusion, sysadmin, privacy, Internet, infosec, security, information security, secops" />



	<!-- Twitter Card -->
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:title" content="Jason's Pen Test â Darknet Diaries">  
	<meta name="twitter:description" content="Jason Haddix has done hundreds of penetration tests in his career. He comes on the show today to tell us a few stories of things he's done.">
	<meta name="twitter:image" content="https://darknetdiaries.com/imgs/computerstation.jpg" />

	<!-- Facebook OpenGraph -->
	<meta property="og:url"                content="https://darknetdiaries.com/transcript/130/" />
	<meta property="og:type"               content="article" />
	<meta property="og:title"              content="Jason's Pen Test â Darknet Diaries" />
	<meta property="og:description"        content="Jason Haddix has done hundreds of penetration tests in his career. He comes on the show today to tell us a few stories of things he's done." />
	<meta property="og:image"              content="https://darknetdiaries.com/imgs/computerstation.jpg" />



	<!-- Podcasts -->
	<meta name="apple-itunes-app" content="app-id=1296350485">
	<link rel="canonical" href="https://darknetdiaries.com/transcript/130/">
	<link type="application/rss+xml" rel="alternate" title="Darknet Diaries" href="https://feeds.megaphone.fm/darknetdiaries">


	<link rel="image_src" href="https://darknetdiaries.com/imgs/computerstation.jpg">

	
	<!-- Font Embed Code -->
	<link href="https://fonts.googleapis.com/css?family=Anton" rel="stylesheet">
	

	<!-- Styles -->
	<link rel="stylesheet" href="/css/style.css">
	
	<!-- Icons -->
	<script defer src="https://use.fontawesome.com/releases/v5.1.1/js/solid.js" integrity="sha384-GXi56ipjsBwAe6v5X4xSrVNXGOmpdJYZEEh/0/GqJ3JTHsfDsF8v0YQvZCJYAiGu" crossorigin="anonymous"></script>
	<script defer src="https://use.fontawesome.com/releases/v5.1.1/js/brands.js" integrity="sha384-0inRy4HkP0hJ038ZyfQ4vLl+F4POKbqnaUB6ewmU4dWP0ki8Q27A0VFiVRIpscvL" crossorigin="anonymous"></script>
	<script defer src="https://use.fontawesome.com/releases/v5.1.1/js/fontawesome.js" integrity="sha384-NY6PHjYLP2f+gL3uaVfqUZImmw71ArL9+Roi9o+I4+RBqArA2CfW1sJ1wkABFfPe" crossorigin="anonymous"></script>

	
	<!-- Custom Styles -->
	<link rel="stylesheet" href="/css/custom.css">
	

	
	<!-- Extra Header JS Code -->
	
	
	
</head>


<body class="loading" data-site-url="https://darknetdiaries.com" data-page-url="/transcript/130/">


	

<header class="header">

	<div class="wrap">
		
		<a href="/" class="header__title">
			Darknet Diaries
		</a>
		

		<div class="menu">
			<div class="menu__toggle js-menu-toggle">
				<div class="menu__toggle__icon"><span></span></div>
			</div>
			<div class="menu__wrap">
				<ul class="menu__list">
					
					<li class="menu__list__item">
						<a href="/episode/" class="menu__list__item__link"><h5>Episodes</h5></a>
					</li>
					
					<li class="menu__list__item">
						<a href="/bonus/" class="menu__list__item__link"><h5>Bonus Episodes</h5></a>
					</li>
					
					<li class="menu__list__item">
						<a href="/es/" class="menu__list__item__link"><h5>EspaÃ±ol</h5></a>
					</li>
					
					<li class="menu__list__item">
						<a href="https://shop.darknetdiaries.com" class="menu__list__item__link"><h5>Shop</h5></a>
					</li>
					
					<li class="menu__list__item">
						<a href="/search/" class="menu__list__item__link"><h5>Search</h5></a>
					</li>
					
				</ul>
			</div>
		</div>

	</div>

</header>


	<div class="loader"><svg width="120" height="30" viewBox="0 0 120 30" xmlns="http://www.w3.org/2000/svg"><circle cx="15" cy="15" r="15"><animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite" /><animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite" /></circle><circle cx="60" cy="15" r="9" fill-opacity="0.3"><animate attributeName="r" from="9" to="9" begin="0s" dur="0.8s" values="9;15;9" calcMode="linear" repeatCount="indefinite" /><animate attributeName="fill-opacity" from="0.5" to="0.5" begin="0s" dur="0.8s" values=".5;1;.5" calcMode="linear" repeatCount="indefinite" /></circle><circle cx="105" cy="15" r="15"><animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite" /><animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite" /></circle></svg></div>

	<div class="page-loader"></div>

	
	<div class="page">

		<div class="page__content" data-page-title="Jason's Pen Test â Darknet Diaries">

			<section class="hero hero--single">

	<div class="hero__image" style="background-image: url(/imgs/computerstation.jpg)">
		<div class="hero__overlay"></div>
	</div>

	<div class="wrap">

		<h1>EP 130: Jason's Pen Test</h1>
	</div>

</section>

<section class="single">

	<div class="wrap">

		<article class="single-post">
	
			<script>
			window.playerConfiguration = {
			"options": {
	            "themeHtml": "https://darknetdiaries.com/css/player-theme.html",
	            "themeCss" : "https://darknetdiaries.com/css/player-theme.css"
	         },
			 "extensions": {
			   "EpisodeInfo": {},
			   "Share": {}
			 },
			 "podcast": {
			   "feed": "https://feeds.megaphone.fm/darknetdiaries"
			 },
			 "episode": {
			   "media": {
			     "mp3": "https://www.podtrac.com/pts/redirect.mp3/pdst.fm/e/chrt.fm/track/G481GD/traffic.megaphone.fm/ADV5745749393.mp3"
			   },
			   "coverUrl": "https://darknetdiaries.com/imgs/darknet-diaries-sm.jpg",
			   "url": "https://darknetdiaries.com/episode/130/",
			   "title": "Ep 130: Jason's Pen Test"
			 }
			}
			</script>
			<script class="podigee-podcast-player" src="https://cdn.podigee.com/podcast-player/javascripts/podigee-podcast-player.js" data-configuration="playerConfiguration"></script>

			
			<p><a href="/episode/130">Episode Show Notes</a></p>
			

			<pre>
							
			<p>[START OF RECORDING]</p>

<p>JACK:	I used to work for this company, and I worked on the overnight shift, and they had a parking garage. But the best parking spots were all assigned to management. Not only that; you had to have a special parking garage badge to get in, so I always had to park far away. What really bugged me is that I was on the night shift, and there were only three of us on the night shift. So, it was like the whole parking garage was empty. Well, one day I brought my skateboard to work and was just rolling around in the parking garage during my break, and I rolled up to the mechanical arm that blocked you from getting into the garage, and to my surprise, it opened as I rolled up to it. What?</p>

<!--more-->

<p>I waited for it to go down and I tried again, and it opened when I got near it again. What I discovered was that there was a little electronic eye which detected when a car was trying to exit the parking garage, and it would lift the gate to let the car out. Well, I pinpointed exactly where that eye was and just tried to do something like take my shoe off and place it in front of the sensor, and sure enough, that was enough to get the gate to lift up until I moved my shoe. Well, naturally I hopped in the car, drove up to the gate, got out of the car, took my shoe off, put it on the exit sensor, and it raised the gate, and I got back in the car and was able to get through the gate and grab my shoe on the way through, and just park wherever I wanted.</p>

<p>(INTRO):	[INTRO MUSIC] These are true stories from the dark side of the internet.  Iâm Jack Rhysider.  This is Darknet Diaries.  [INTRO MUSIC ENDS]</p>

<p>JACK:	In this episode, weâre gonna hear some stories from Jason Haddix.</p>

<p>JASON:	Iâve always been into computers. I think I had my first computer when I was eleven or twelve. I think my parents got it for me for Christmas. It was a 486. Kinda just taught myself âcause I was curious about how it worked. A little bit of programming, HTML, and stuff like that.</p>

<p>JACK:	Any dark stuff you were looking into back then or anything that was â maybe your parents wouldnât be happy you were seeing?</p>

<p>JASON:	Yeah, yeah. So, I mean, when I was in my early, early twenties, a friend of mine wanted a fake ID. We were all, you know, very young and impressionable at the time. So, I went out and a friend of mine was selling fake IDs, and I bought one. Back then it was a hundred and twenty bucks or something like that for a fake ID. I got it eventually. It took a long time for him to get me one. Then when I got it, it was really crappy. I was really upset and I figured hey, I could probably do a better job than this if I just learned it, âcause I figured I knew computers and I knew stuff like that. So, I just started Googling â back then it wasnât really Google, but I just started looking on the internet for resources. So, one of the resources that I fell upon was ShadowCrew, which was probably one of the first darknet forums that was mainstream before the darknet actually existed. It was still the regular web, but it was forums. I started learning how to do everything to do with fake IDs; bought printers and learned how to make my own, and probably a couple for my friends. But it involved asking a lot of questions with the underground then, which was ShadowCrew.</p>

<p>JACK:	Okay, yeah, so Jason was on ShadowCrew, and if you arenât familiar with ShadowCrew, just go back and listen to the episode just before this, called Gollumfun. While Jason was on ShadowCrew, he was focused on making fake IDs, but he really didnât sell that many.</p>

<p>JASON:	[MUSIC] I mean, I would say I only sold a handful. It was more of a obsession for me to do it better than what I got. Iâd say maybe three or four really good ones and a whole bunch of failed ones for my personal use, like just for my friends, really. I wasnât a distributor even on the forums or rated, but I had shared a couple with people and they were like oh, these are getting really, really good. Mine usually passed, so it wasnât rocket science, right? It was just having access to the printers, the templates, understanding all that kind of stuff. So yeah, it wasnât like I was a criminal enterprise that was making a lot of money or anything like that. It was just that I found it really interesting. You could fall into anything; you could fall into a video game or you could fall into some kind of obsession like finishing a project. I had to figure out how to do it, and I did.</p>

<p>JACK:	Then one day he goes onto ShadowCrewâs website and sees itâs been shut down.</p>

<p>JASON:	The picture that they put up there with the dude behind the bars â and said the Secret Service is coming for all of you and a whole bunch of your â and then the indictment came out and a whole bunch of people who â I really only knew their screen names, but had been arrested in multiple countries.</p>

<p>JACK:	Well, this really spooked Jason. People were getting arrested for selling fake IDs on this site, and he was one of the people selling fake IDs there.</p>

<p>JASON:	The bust happened and then the next day I gathered â so, in the process of printing stuff, you have three â usually three different printers, you have laminates, you have stencils, you have powders, you have all kinds of crazy stuff; you have inks. As soon as I had it, I just dumped it in a black trash bag, a couple black trash bags, threw it in my trunk, and drove.</p>

<p>JACK:	[MUSIC] He was driving as fast as he could to another city far, far away. His plan was to just throw it all into a dumpster nowhere near where he lived just to get rid of everything.</p>

<p>JASON:	On the way to do that, I actually got pulled over.</p>

<p>JACK:	Jasonâs heart was pounding so hard. He didnât know why the cop pulled him over. Maybe it was for the fake IDs, and all that evidence was in the trunk of his car. The cop walked up to his window and said he was speeding. This was somewhat of a relief, but Jason was still really worried.</p>

<p>JASON:	I just thought heâs gonna ask me to pop my trunk and see all my stuff in the trunk.</p>

<p>JACK:	But the cop didnât. He just gave Jason a ticket and let him go. Whew, close call. So Jason continued to drive to the next town, this time going a little slower, to get rid of his stuff.</p>

<p>JASON:	Dumped it in the next city in a dumpster with some lighter fluid and lit it all on fire. Yeah, that was probably one of the scariest moments of my life. Like I said, it scared me straight.</p>

<p>JACK:	Hm, thatâs interesting, eh? That intimidating post that the Secret Service put up on ShadowCrewâs site was enough to make Jason quit the fake ID scene forever. Itâs kind of hard to leave something like that behind. With ShadowCrew, it was like he was let into some inner circle of people, almost like a family. Itâs hard to build up something like that and earn that trust just to walk away from it all and start over somewhere else. Well, by this point, Jason had enough knowledge of computers that he knew he wanted to make a career of it. He really liked the challenge of hacking into things, too. So he took some classes and then got a job fixing computers, then became a junior penetration tester. He did that for two years and then got another job doing penetration testing at HP. This is where he was tasked at hacking into companies to see if they were secure.</p>

<p>JASON:	So I started there as a staff penetration tester, did probably a couple hundred pen tests for the Fortune 500, a lot ofâ¦</p>

<p>JACK:	A couple hundred; thatâs a lot.</p>

<p>JASON:	Yeah, I mean, Iâd say Iâve probably done over my career maybe three hundred pen tests â or a little bit less than three hundred pen tests, probably, over the years. But yeah, we did one-week assessments. You had one week for the assessment, one week for the reporting. It was really easy for HP to get those contracts because they already had these big ins through their IT group with these companies. They were selling them printers, they were selling them enterprise software, and then everybody at that time needed â if they were subject to any kind of compliance, they needed a pen test for clients to satisfy compliance. So, they would just go with the people they already had a contract with, which was us. So, I got exposed to a ton of the big, big banks, a ton of big tech companies, big enterprises. I pen tested a lot of stuff.</p>

<p>JACK:	Ah, yes, compliance. I believe to be PCI compliant, it requires that you have to have a penetration test. PCI is Payment Card Industry, so, like MasterCard, American Express. They wonât let you process their credit cards unless youâre PCI compliant, which means you have to have an auditor that comes to your company and analyses your security practices and conducts a penetration test. I guess HP was one of those auditors and offered this service, which is where Jason really honed his skills as a hacker. Now for the most part, Jason focused on network hacking. Thereâs a few types of penetration testers; thereâs physical penetration testers where they physically try to get into a building to see what they can access, but thereâs also application pen testing. This is where maybe a software-maker gives their application to you and you try to find a bug with it. Then thereâs network penetration testing, and this is where you try to break into a network using a computer, over the internet or whatever.</p>

<p>You might try attacking it from the outside world or you might be actually given permission to come into the network and see what you can get to from inside the company. For instance, the people who work in marketing shouldnât be allowed to just see everyoneâs passwords, right? Someone should test that to see if itâs truly secure. Jason did a few physical pen tests and thereâs one he told me about, which is actually hilarious. [MUSIC] Okay, so you know when you work somewhere, you get to know the security mechanisms that they have in place? Well, Jason worked for this place for a while and he was pretty familiar with the layout of the office and knew exactly how the doors worked in the building. Well, later on when he went to work for another company, he was given the task of breaking into this previous employer. Since he already knew the place well, he knew exactly what to bring. Okay, we need to get into this building.</p>

<p>JASON:	Yeah.</p>

<p>JACK:	Let me pack some equipment for this.</p>

<p>JASON:	[LAUGHING] Yeah.</p>

<p>JACK:	What do you throw in your bag?</p>

<p>JASON:	Yeah, I mean, you throw your lockpicks, you throw your USB keys that have malware on them, and you throw your blow-up doll.</p>

<p>JACK:	Yeah, a blow-up doll. He knew there was a certain door that had a magnetic lock. Nobody was allowed in or out unless the magnet was disengaged. Well, to get in, you need your badge, which disengages the magnet, but to get out, you didnât need your badge. You could just open the door by pushing it from the inside. So how does the magnetic lock disengage for people leaving? Well, it unlocks when it senses someone leaving. It had a little electronic eye and could see when something got near the door on the inside, and it would unlock the door. This was one thing he noticed, but he also noticed something else about this door.</p>

<p>JASON:	The gap, the small, small gap between the door and the ground, you could slide something under there.</p>

<p>JACK:	[MUSIC] So when he was given this assignment, he packed a blow-up doll and went right up to the door, pulled it out, which it was deflated and flat, and he put it on the ground and slid it under the door. The whole doll was on the other side of the door except for the part that you put your mouth on to blow it up, so he laid on the ground and began blowing up the doll, which was inflating on the other side of the door.</p>

<p>JASON:	Thatâs exactly what it is, just face on the pavement, blowing up the blow-up doll. Yeah, for sure.</p>

<p>JACK:	Then you hear the click of the door and you jump up and grab it.</p>

<p>JASON:	Yeah, we had two people with us, so the other person would apply some slight pressure as soon as a mock walked through the door, do the same thing â it was a man-trap door, two sets of doors, so did the same thing on the other one and then walk into the physical premises. Once youâre in there, you have access to everything.</p>

<p>JACK:	I love this because to me, this is something I never would have expected someone to bring on a physical pen test. To take pictures of it and to put it in the report must have been hilarious. There was this other physical pen test that he did that also had an interesting bit to it. His objective in this one was to break into the building and see if he could get into the server room. It was him and two others on this assignment. Now, these server rooms are typically more secure than the rest of the building. It usually has a different kind of key to get in and cameras pointed at the door, and more security layers. Well, step one was to get into the building, and there was a locked door to get into the building, so they simply waited until someone was going in and they just went in right behind them and just tailgated them right in through the door.</p>

<p>[MUSIC] That worked; they got in the building. They scoped the place out and they figured out where the server room was, and they didnât see an immediate way in, but they had some ideas. It just wasnât gonna be easy. The blow-up doll trick was not gonna work here, and you could try picking the lock to get in, but that takes a while, maybe ten minutes or longer, and itâs just too much time to be standing there, probably on camera, trying to force open the door. So, they got an idea to just hide in the office somewhere and wait for everyone to go home for the night. So they ducked into a little room and just waited for a few hours.</p>

<p>JASON:	Until everybody was out, and then the objective was to get into the server room. The server room was segregated from some of the other offices basically with a locked door. We didnât have the correct technology to clone a card. We werenât successful to clone a card of an employee to â the right kind of employee to get into the server room, so we were kind of at our limit of trying to reach the objective for the test. So, what we had noticed is that the ceiling tiles â if you look at any building, their ceiling tiles allow some space to run wiring and air conditioning up above. There was a small table outside of the door of the IT server room, which had some flowers on it. So we were like, I wonder if we â if thereâs any gap to try to crawl over the wall boundary.</p>

<p>[MUSIC] I was probably the lowest on the totem pole at this point with the company I was working at, and so they convinced me to climb up into the ceiling tiles. Climbed up, pulled myself up through the beaming part into the crawlspace above the door divider, and crawled over. I had been pretty careful to keep on the metal divider parts that hold the ceiling tiles on, and those are more stable. They hold a little bit of weight. But on one of them â once I was over into that area, I put my knee down on the wrong area and promptly fell through the ceiling into the server room flat on my stomach. Knocked the air of me. I kinda thought I was gonna die. Itâs like, catch my breath, kinda make sure nothing was broken. Luckily nothing was.</p>

<p>JACK:	Did anybody shout, like, you okay over there?</p>

<p>JASON:	Yeah. I mean, yeah. After, I think the response was âoh shitâ as soon as they heard the cracking â or the tile crack through. I canât really remember âcause I was falling and still on the floor kinda dazed, but Iâm sure one of them cared about my safety at the time. Then they were wondering if I could open the door from the inside, which I could. Reached the objective in the end, which was nice. So, yeah.</p>

<p>JACK:	He was okay; bruised, shook up a bit, but okay, and he was lucky he didnât fall onto any server racks or sharp objects. He landed just on the empty floor, and he was also lucky he didnât land on any computers and pulled out cords or caused an outage or something. Anyway, after that, he was able to get into a bunch of those servers and prove how someone can get into their servers. If you step back and look at it, he essentially walked in off the street and got into the computer room and gained full access to their main systems there, and he only broke a few ceiling tiles doing it. The customer was happy to have this report. It wasnât a big deal to replace the tiles, and this showed them the importance of having walls up in the ceiling to prevent people from getting in that way. Now, even though Jason has done a few physical pen tests, the majority of pen tests heâs done have been network-based. That is, trying to get into the main website or network by just using a computer. One time, he was tasked with hacking into a bank.</p>

<p>JASON:	[MUSIC] Yeah, absolutely. So, we were contracted to do a pen test on a large bank, a worldwide-present bank, and we had a big contract with this bank. When I say we, it was me and one other tester at the time working on this project, and one was the network and web portion of the penetration test, and the other was their new mobile app and their mobile application.</p>

<p>JACK:	He was tasked with examining the mobile banking app to see if he can get any customer information or sensitive information from the app itself. Have you tried using these mobile banking apps? Do you get a weird feeling about it like I do? Something about having my bank details in my pocket doesnât sit right with me. It seems silly since pretty much everything else is in my pocket, but throwing my bank account in there too? Iâve always been very hesitant of this. Itâs kind of the same feeling of when I was doing online shopping for the first time and I was asked to give my credit card into a website. I was like, no way am I doing that. Well, years later, thatâs the main way I shop now. But my favorite definition of the term âinformation securityâ is to enable business to be conducted safely in a hostile environment. The internet is a hostile environment, and clearly if a bank wants to come out with a mobile banking app, they better have someone securing this app so business can be conducted safely. Well, this is what Jason was tasked with doing. He was going to act hostile to the app to see if it exposed any data it shouldnât.</p>

<p>JASON:	We started doing recon on them. We had found a whole bunch of web servers and stuff like that, and we had their mobileâ¦</p>

<p>JACK:	So, I understand what recon is for a physical pen test, right? Weâre going to Google Maps, weâre looking on LinkedIn, seeing what kind of employees there are.</p>

<p>JASON:	Yeah.</p>

<p>JACK:	But what kind of recon is there for a web app pen test or a mobile app pen test?</p>

<p>JASON:	Absolutely. So, this is kinda my specialty, I would say, inside of the hacking scene. Iâm kind of the godfather of reconnaissance for web applications and Iâve written multiple talks about it. So basically you have to think about a company as â especially a big company like this one, like a bank, they have hundreds if not bordering on thousands of publicly-exposed web servers. You know of the one; you know of www.bank.com, right, that you log into and maybe a couple other ones. So, you have to basically find them. So, the act of recon for a bank or any big web entity is basically finding all of their assets that are connected to the internet. So, thereâs a number of methods that you can use to do this. You can use search engines to find other sites of theirs that are online. You can do things like searches for their privacy policy in terms of service, you can brute-force subdomain names. So, if youâre looking at www.bank.com, you can check to see if admin.bank.com exists with the DNS registrars or just trying to resolve it. If you get a response, that means it resolves and you can go to that web page and possible check out sites like that. So, you can brute-force different names if you have a long list of different names that could exist, which we did.</p>

<p>JACK:	So, after finding all the domains, the next step is learning what you can do with those domains. Where are they hosted? What kind of applications are running on them? Do they have any default credentials or known vulnerabilities? A vulnerability scanner can pick up some of this, but itâs also good to kinda look through every domain individually and see if anything pops out at you. Jason was on this engagement with another person on his team, and they decided to split the work. Jason was gonna look at the mobile app while his coworker would continue to look at the domains they found.</p>

<p>JASON:	So, for the first week I was just kind of looking at the app, trying to figure out how it worked, and at that time there was a new feature of the mobile app for this bank that you could take a picture of a check and deposit it.</p>

<p>JACK:	[MUSIC] Oh yeah, Iâve seen this feature. Instead of running down to the bank to deposit a check, you can just take a picture of it on your phone and the app will deposit the check into your account. This feature always seemed suspicious to me. You just need a photo of the check, not the actual thing, and you have to enter the amount youâre depositing? Whatâs stopping you from depositing the same check twice or entering in whatever amount you like? Thereâs lots to test here, and there must be a whole slough of new attack vectors when a feature like this rolls out, right?</p>

<p>JASON:	I was looking at this app and I was capturing the traffic that went from the mobile app to the servers that took care of the processing of the image of the check.</p>

<p>JACK:	Okay, thatâs a good place to start. When you send the bank a check pic, where does it go?</p>

<p>JASON:	I was proxing the web traffic between the phone and the web server with an interception proxy like Burp Suite. So, itâs a common tool for web hackers; it just lets you see the traffic between websites and your browser or websites and your mobile phone. So, what it did first is it took the image of the check and then turned it into binary representation of the image, and then sends it across an API which at the end was uploaded â was reconstructed and put on a server.</p>

<p>JACK:	The server that it went to was an AWS storage bucket. This is Amazonâs Cloud storage. So, check images were being sent to this storage place, and as Jason continued to watch the traffic, he was able to identify exactly which storage bucket on AWS these checks were stored in.</p>

<p>JASON:	So, you could just visit the back end and there was a whole bunch of images of checks just in this directory. So, that is a little bit more of a privacy breach, right?</p>

<p>JACK:	Yeah, soâ¦</p>

<p>JASON:	Yeah.</p>

<p>JACK:	Are you talking about an open AWS bucket that anybody can visit?</p>

<p>JASON:	Yes, and because this was the first iteration of this feature and that was when AWS was still in its young years, yeah, absolutely it was an open AWS S3 bucket of check images.</p>

<p>JACK:	[MUSIC] Whoa, this is bad. An open AWS bucket means the entire contents of that storage bucket is available for anyone to see. They could see everything on there. Now, in some cases, this is fine. For instance, darknetdiaries.com is hosted on AWS, and the whole bucket is open and visible for anyone to see. But I donât have any private data on there; thereâs no user data, thereâs no back end database. Everything is supposed to be visible to the world. But I donât think itâs a good idea for a bank to store all their cashed checks through the mobile app in an open AWS bucket. Anyone can see all the cashed checks. Jason was looking at these checks and just couldnât believe it.</p>

<p>JASON:	There was about two million checks in this instance. So, lots of checks, and each one has your address printed on it and your account number, which is considered somewhat private data, and the banks are supposed to protect that. If youâve ever seen the gif of when Tiger Woods would score a good swing or something like that on a golf course, he does the little â closes his fist and itâs like a little fist bump in the air or whatever. Thatâs my default pen test move when I find something critical. In this case it exposed names, addresses, account numbers, and transaction history for users using this feature. So, it was a decent-sized finding. It wasnât the most critical ever, but it was a decent-sized finding.</p>

<p>Really, the first thing is you get kinda hot and sweaty and youâre like alright, sweet, I think I have something. This is really great. You get a little nervous because if youâve been a pen tester for a long time, you know that theyâre probably monitoring the network and at any given time you could lose access to something thatâs good, so the first thing you do is take many screenshots of the traffic that you have and the vulnerability, and take â so you have images for your report at the end. So, I started doing all that, started making sure I gathered all the evidence in case I needed to prove out that it actually existed in case they ghost-patched it or something like that. So, yeah, those are the feelings. But when you hit a bank like this, especially one that has a big, big name, itâs pretty exhilarating. Yeah, thatâs the whole reason you get into pen testing, is to find big finds like that.</p>

<p>JACK:	Okay, so thatâs a big deal. Heâll want to tell them about that for sure and get them to lock down access to that. But he wasnât done testing; this mobile app was for iPhone, so he grabbed the app off the phone and moved it to a computer to analyze. One of the first things he looked at was the PLIST file. This lists the properties of the app, and here you might find things like server names or information where data is stored on the phone. [MUSIC] But as he looked through the PLIST file, he found some hard-coded credentials, a username and password used to authenticate to something like an API or database.</p>

<p>JASON:	We had found a server that had a default install of Apache, and the manager console was open to the internet, so /manager, /HTML. So, we used credentials that we had found hard-coded in the mobile app, which happens all the time. People hard-code credentials in mobile app PLISTs even to this day and use it just as â on a whim, right? I normally wouldnât have tried this, but I just tried it to make sure on this manager console to see if maybe the admin was the same of the service or whatever, and it turned out it was. So, we used these hard-coded credentials that were in the mobile app that we were able to reverse out on this website, and got into that.
JACK:	[MUSIC] A-ha; web admin access to the server had been obtained. Amazing. Now, this web server was running something called Tomcat, which as an admin you could upload stuff to it, so Jason just uploaded a payload using Metasploit to it, which gave him command line or operating-system-level access to this web server. Itâs one thing to be able to log into a website as an admin, but you gain a whole new level of power when you can get into the operating system as an admin, which is what he was able to do at this bank.</p>

<p>JASON:	Then once you have a foothold like that, we were able to start scanning internal â some internal IPs that connected to that server on more internal IP space of theirs, so inside their company, as well as see a whole bunch of transaction data and customer data on this server that we had exploited. So, it was a second really big finding. It had â I canât really talk about too much of it âcause itâs â a lot of this stuffâs covered under an NDA, so â but it had client names, transaction data, a whole bunch of stuff on there as well. So, we had two ways to really breach customer data on their network.</p>

<p>JACK:	This was quite the report they submitted to the client. The bank was pretty happy that Jason found all these problems, and they got the entire mobile development team on the call and had Jason explain to them exactly what he found and how to fix this. They were surprised, but they all agreed this is very important stuff to fix. We have one more penetration test story from Jason, and youâre gonna want to hear this one, but weâre gonna take a quick break first, so stay with us. Jason Haddix has pen tested hundreds of websites in his professional career, and one stands out as particularly interesting.</p>

<p>JASON:	Okay so, this oneâs one of the ones that is interesting. A buddy of mine had taken on some pen test contracts and he had taken on one too many. He basically had hit me up and said hey, do you want to do a moonlight test? A moonlight test is basically I already have a job, but he can give me a contracting gig on testing a site. I said yeah, sure, why not? So, he forwarded me the info for the site and it turned out to be a pornography site. But not just a pornography site; it was a site that had a store for items related to sex toys and stuff like that. It had private cam access to view live workers doing their thing, and then also prerecorded videos. It had messaging systems for you to chat with the cam people and all kinds of stuff. So, it was a big site.</p>

<p>So, he sent over the contract and I took it. The funny parts about this are the first thing I did was I had to go to my wife and be like hey, youâre gonna â you might see some weird stuff on my computer if you walk by. Itâs for work, I swear, because thereâs just a lot of graphic stuff in the nature of testing this site. So, I had to give her a disclaimer upfront. But yeah, so, I went through my normal methodology starting out, and I registered to the website. [MUSIC] The client had really set a goal of getting access to this one account on the site, and so that was the goal of the majority of it, was to get access to this one account which had a private picture in it. If you get access to the picture, he would have considered that a success because no one was ever supposed to have access to that picture.</p>

<p>JACK:	So this was a user account or a camgirl account orâ¦?</p>

<p>JASON:	It was a camgirl account with messages and pictures associated to it. So, the way the site worked is you could watch live cams, and then pictures that you had taken â kind of like Patreon or any of those other services, you could pay to access specific pictures, too. So, he had set up a picture in the picture section that he wanted us to access, and it would show that we had unauthorized access for one of his â I donât know if it was a real or a fictitious camgirl.</p>

<p>JACK:	So, it sounds like security so that nobody steals our â nobody gets unauthorized access to the paid contentâ¦</p>

<p>JASON:	To the content, yeah.</p>

<p>JACK:	Like, donâtâ¦</p>

<p>JASON:	He was really worried about that.</p>

<p>JACK:	Itâs kind of a funny objective âcause itâs not like, make sure our stuffâs secure.</p>

<p>JASON:	Yeah.</p>

<p>JACK:	Itâs hey, make sure no oneâs stealingâ¦</p>

<p>JASON:	I guess you could see itâ¦</p>

<p>JACK:	â¦like, going around the paywall.</p>

<p>JASON:	I guess you could see it either way, right? You could see it like he wanted to protect the integrity of the workers and he cared more about the workers than the â or the content creators or â more than the users of the site. But no, no, absolutely, you could see it in the dark way of just like heâs trying to protect his bottom line, for sure. Yeah. So yeah, so I started creating an account, [MUSIC] just my own account to be a content creator on the site. I uploaded some â just random photos into the photo storage area. There was the store as well, so I purchased an item, I sent some DMs, and Iâm â this whole time, Iâm capturing all this web traffic through a proxy and seeing what calls get made and then just noting down how each one happened. So, the first thing that I noticed was that when you set up your account â and itâs common for some sites to not really care about this â was that the password policy was pretty much whatever you wanted it to be. So, for this site, when you basically signed up to be a user or a creator, it was five characters minimum and no special characters or numbers required. You could just make it whatever you want as long as it was five characters.</p>

<p>JACK:	Okay, so a five-character password minimum is pretty weak. But thatâs only a suggestion to improve at this point. Itâs like a theoretical issue, and it would be nice if he could demonstrate how thatâs a real problem. If he had a list of user accounts, he could try to brute-force their passwords and see if anyone had a five-character password. But he didnât have that. Next, what he did was he tried to see how the site handled password resets, so he initiated one. What the site did was it reset his password and then e-mailed him this new password. [MUSIC] But he noticed the password that the site created for him was a five-character password, and every time heâd reset the password, it was always five characters. Well, to a hacker like Jason, he started thinking how he could use this to his advantage.</p>

<p>JASON:	Basically you could start a password reset for any user on the site, any e-mail address, and I had â he gave us the e-mail address for the account he wanted us to target. Then you could brute-force the five characters that it was using, because it was minimum five characters and the password reset would only set a five-character password. You could brute-force that in about fifteen minutes. So, I went through every character in about fifteen minutes. There was a small rate limit required, but it wasnât overly complex to bypass the rate limit. Eventually, right away on the test, broke into the account with the image that he wanted through the password reset and the weak password policy.</p>

<p>JACK:	Whatâs the tool you used to do that?</p>

<p>JASON:	I did it in Burp Suite, which is a interception proxy.</p>

<p>JACK:	But what youâre doing is youâre going to the website, logging with that e-mail address, and then typing in a random five-character passwordâ¦</p>

<p>JASON:	Yep.</p>

<p>JACK:	â¦and then again and again and again?</p>

<p>JASON:	Yep. So, every combination of 1, 0 â or 00000 through 99999 and trying every combination between that number, and basically keep on trying over and over again once I did the password reset, because it reset it from what they had chose originally. So, that was the first really easy one.</p>

<p>JACK:	So, Burp â I didnât know Burp Suite did that, just keep trying passwords.</p>

<p>JASON:	Yeah, so you can â in Burp Suite they have a tool called Intruder, and Intruder basically can capture a web request and then you can highlight a section you want to edit and load a list or a rule to try a whole bunch of different requests. So, basically I captured the request for a regular login, or â yeah, a regular login, and then highlighted the area where the password was and then told it to try everything between 00000 and 99999. It just ran all over those requests, added a small little wait in-between each one, and then eventually you know which one hits when thereâs a difference response time from the server. So, you just wait until you see the different response time from the server.</p>

<p>JACK:	Well, that was easy. He was able to gain access to the account that he was asked to try to get into. This is fascinating to me because by and large, this is the top thing I get people asking me to help them hack. I am constantly getting hit up on my DMs of people wanting me to help them hack into something, and Iâm like ooh, what are we gonna do, hack into a bank or free someone from prison? Theyâre like oh no, sir, I need you to hack into my girlfriendâs account on social media. Thereâs always a ton of people who are trying to get into someone elseâs account. Hereâs a rather easy way to just get into anyoneâs account on this porn site; reset their password, then brute-force it. Itâs just a five-character password and itâll take fifteen minutes to do. Imagine taking over the accounts of the top earners on this site.</p>

<p>JASON:	Whatâs interesting is that password complexity is a really touchy topic for websites, right? Your bank obviously has password complexity and makes you add special characters and a minimum number of characters and stuff like that. But content sites that basically â they donât deem access to your account super-private, or they deem it private but they want the least amount of friction for users to get into their account. Sometimes they choose this on purpose. When we talked to the guy on the out-call, which is several steps ahead âcause we did many other things to this site, but when we talked to this guy on the out-call, he knew that the password complexity was weak and he had kept it weak on purpose because it offered less friction for his users to get into their accounts. So it was like a personal thing. So, he ended up having to change the complexity of the password requirement for users and for content creators, and then also had to change the flow for the Forgot Password as well so it wouldnât just set one; it would give you the link like normal sites do and then send you to a page to change your own password to something you want to set it to.</p>

<p>JACK:	Okay, so if you could reset the password and take over any user account on this site, which user should you take control over next?</p>

<p>JASON:	We found our guyâs admin account as well. [MUSIC] It was literally admin@thecompany.com, and we reset his password and logged into his account, which had superuser access as well. So, we could see pretty much the back end of the site as well from a management point of view, which was really interesting âcause he had way more functions available to him than anybody else.</p>

<p>JACK:	I mean, he would see that his password was reset. Thatâs strange; I didnât do that.</p>

<p>JASON:	Not if you do it at 3:00 AM his time.</p>

<p>JACK:	Is that what you did?</p>

<p>JASON:	Yeah, yeah. Yeah, so you do it â we waited until late at night. So, yeah.</p>

<p>JACK:	Tricky.</p>

<p>JASON:	Yeah.</p>

<p>JACK:	But thatâs what you gotta do.</p>

<p>JASON:	Thatâs what you gotta do, yeah.</p>

<p>JACK:	He also found a pretty clever bug about uploading images. This site allowed users, especially camgirls, to upload content. Jason made an account and uploaded an image and watched how the server handled it. Well, it tagged him in the upload request. So, he tried to upload another image, but this time tagging another user to see if that did anything. The server took that as another user has uploaded this. So, he found a way to upload images to other usersâ accounts on the site, which is interesting; you could deface someone elseâs account this way, putting all kinds of images and stuff on their account that others would see when they visited it.</p>

<p>JASON:	We had found a couple of cross-site scripting bugs, and then we had also managed to accomplish seeing the paid streams for the users without paying for them. You could look at the source code of the HTML when you were attempting to look at somebodyâs paid stream. Normally you would click a button and pay with your credit card to access the paid stream. There was a parameter in there called debug that was set to False. When you set it to True, you were able to access the stream without paying for it. So, that was another way that we could bypass the paid nature. So at this point, we could reset anybodyâs password and take over their account. We had access to the back end admin site, we had cross-site scripting, we could view streams without paying for them.</p>

<p>We pretty much had everything that we kinda thought, but then also in the store â we had been working on the store and towards the end of the week, we had found that there was an SQL injection bug that allowed us to dump the complete database, purchases and credit card data for everything that had been ordered on his store that was associated to the site, which is not only just sensitive âcause you have credit card data, but also sensitive because these are very sensitive purchase of a very sensitive nature. So, we had all that transaction data as well. So, that was that test, and thereâs a lot of things I learned from that test about that industry and stuff like that. It was really interesting and cool.</p>

<p>JACK:	Huh, sounds like this site had a lot of security problems. You might not immediately think of why itâs so important to secure a porn site, but one of the other things that this site allowed users to do was hook up with each other. Itâs reminiscent of this scandal.</p>

<p>HOST:	A major hack tonight is threatening to expose embarrassing information on millions of people around the world. They all signed up for a website named Ashley Madison, which helps married people find people who want to cheat with them.</p>

<p>JACK:	This was a news clip from CBS Los Angeles. The site Jason worked on was a competitor to Ashley Madison, and he did this pen test just before Ashley Madison had their breach. If it wasnât for Jason finding these security issues, this site could have easily been the story on everyoneâs nightly news. The reason why that story was so scandalous was because it was very embarrassing for a lot of high-profile people who were found to be users on the site. In fact, I believe two people committed suicide for having their details exposed in the Ashley Madison breach. So, itâs wild to think how Jason may have really saved not only the reputation of this company by detecting these bugs before someone else did, but also potentially saving the lives of some of its users. Maybe thatâs a stretch. If you were Jason at the early 20âs on ShadowCrew and you saw â you looked into the future, a crystal ball, and you saw Jason doing that sort of stuff when heâs older, I wonder what young Jason would have thought.</p>

<p>JASON:	I mean, he would have thought it was pretty cool, honestly. He hadnât had years of professional experience, though, to temper his excitement and do bad things. So, yeah, I meanâ¦</p>

<p>JACK:	Yeah, itâs an interesting perspective.</p>

<p>JASON:	It is.</p>

<p>JACK:	You looking back at that young Jason, young Jason doing dumb stuff, but young Jason looking up at older Jason; older Jasonâs doing really cool stuff, yet young Jason thinks heâs doing cool stuff.</p>

<p>JASON:	Yeah, yeah. Yeah, soâ¦</p>

<p>JACK:	And itâs weird to think that young Jason thinks young Jason is cool and old Jason is cool, but old Jason thinks old Jasonâs cool but young Jasonâs not.</p>

<p>JASON:	Yeah. That was a lot of Jason, but yeah, absolutely. Absolutely true. Iâm lucky I have that perspective now, though, right, and got paid well for that test. So, yeah, it is really â I hate to be a shill, right, but penetration testing and security testing nowadays and having all of the protection we have and being able to do it as a job is one of the most coolest fucking jobs that you can have. Iâll never get over it. A lot of people talk about oh, you graduate out of it. I donât think I will ever graduate out of be â wanting to pop systems in some way. So, yeah.</p>

<p>(OUTRO):	[OUTRO MUSIC] A big thank you to Jason Haddix for coming on the show and telling us these stories. You can follow him on Twitter; his name there is @JHaddix. This show is made by me, the slow poker, Jack Rhysider. This episode was assembled by Tristan Ledger and mixing done by Proximity Sound. Our theme music is done by the abnormie, Breakmaster Cylinder. The only dates I get these days are updates. This is Darknet Diaries.</p>

<p>[OUTRO MUSIC ENDS]</p>

<p>[END OF RECORDING]</p>


			</pre>

			
			Transcription performed by Leah Hervoly <!-- <a href="https://www.leahtranscribes.com">www.leahtranscribes.com</a> -->
			


		</article>

	</div>

</section>

		</div>

	</div>


	<footer class="footer">

	<div class="wrap">

		<div class="parent3col">
			<div class="column">
				<a href="/"><h2 class="footer__text">Darknet Diaries</h2></a>
				<ul class="socials">
	
	
	<li class="socials__item">
		<a href="http://facebook.com/darknetdiaries/" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Facebook">
			<i class="fab fa-facebook-f" aria-hidden="true"></i>
		</a>
	</li>
	
	
	
	<li class="socials__item">
		<a href="https://twitter.com/darknetdiaries" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Twitter">
			<i class="fab fa-twitter" aria-hidden="true"></i>
		</a>
	</li>
	
	
	
	<li class="socials__item">
		<a href="https://www.instagram.com/darknetdiaries/" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Instagram">
			<i class="fab fa-instagram" aria-hidden="true"></i>
		</a>
	</li>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<li class="socials__item">
		<a href="https://www.reddit.com/r/darknetdiaries/" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Reddit">
			<i class="fab fa-reddit" aria-hidden="true"></i>
		</a>
	</li>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<li class="socials__item">
		<a href="https://discord.gg/darknetdiaries" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Discord">
			<i class="fab fa-discord" aria-hidden="true"></i>
		</a>
	</li>		
	<li class="socials__item">
		<a href="https://www.youtube.com/@JackRhysider" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="YouTube">
			<i class="fab fa-youtube" aria-hidden="true"></i>
		</a>
	</li>	
<!-- 	<li class="socials__item">
		<a href="http://uka5ybpmh3u54dkv.onion" target="_blank" rel="noopener noreferrer" class="socials__item__link" title="Onion Address">
			<i class="fa fa-adjust" aria-hidden="true"></i>
		</a>
	</li> -->
	<li class="socials__item">
		<a rel="me noopener noreferrer" target="_blank" href="https://infosec.exchange/@jackrhysider" class="socials__item__link" title="Mastodon">
				<i class="fa-solid fa-quote-left"></i>
		</a>
	</li>
		
</ul>				
			</div>
			<div class="column footer_menu">
				<h5><a href="/episode">Episodes</a><br>
				<a href="/donate">Donate</a><br>
				<a href="https://shop.darknetdiaries.com">Shop</a><br>
				<a href="/links">Links</a></h5>

			</div>			
			<div class="column footer_menu">
				<h5><a href="/about">About</a><br>
				<a href="/reviews">Reviews</a><br>
				<a href="/subscribe">Subscribe</a></h5>
				<div class="footer__copyright">
					<span class="footer__copyright">Â© 2023</span>
				</div>
			</div>
		</div>


	</div>


</footer>


	<!-- Javascript Assets -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<script src="/js/personal-min.js"></script>

	

	
	
	

	<!-- For support visit https://darknetdiaries.com/hotline -->
</body>
</html>